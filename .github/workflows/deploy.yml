#main 브랜치에 푸시가 일어날때마다 동작
on:
  push:
    branches:
      - main

name: Deploy String boot to Amazon EC2
env:
  PROJECT_NAME: action_codedeploy

jobs:
  deploy:
    name: DEPLOY
    runs-on: ubuntu-18.04 
#작동확인
    steps:
      - name: Checkout
        uses: actions/checkout@v2

#프로젝트와 같은 jdk 17과 java17로 서버 내 설정 (버전에 맞게 설정)
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

#뒤에 일어날 작업을 위해 gradlew에 대한 권한 설정
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

#깃 레포지토리 파일 빌드
      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

#zip 파일로 압축
      - name: Make zip file
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

#한국지역의 AWS에 접근하기 위한 ACCESS_KEY_ID와 SECRET_ACCESS_KEY를 secrets 경로에 환경변수로 저장한 각 키 값을 불러옴
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

#aws s3버킷에 깃액션이 생성한 $GITHUB_SHA.zip파일 업로드. 이때 한국지역에서 S3버킷을 만들었으므로 --region ap-northeast-2로 설정, aws에 생성할 버킷명 sim-deploy을 다음 s3 주소에 추가. s3://버킷명(sim-deploy)/$PROJECT_NAME/$GITHUB_SHA.zip
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://sim-deploy/$PROJECT_NAME/$GITHUB_SHA.zip

#aws 에서 제공해주는 Code Deploy 서비스 사용. 이때 생성한 Code Depoly 어플리케이션 명 greenstep을 --application-name 뒤에 추가, 또한 Code Deploy가 받아올 S3 버킷명 sim-deploy를 --s3-location bucket= 뒤에 추가해준다.
      - name: Code Deploy
        run: aws deploy create-deployment --application-name greenstep --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name dev --s3-location bucket=sim-deploy,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
